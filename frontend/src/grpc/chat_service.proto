syntax = "proto3";
package chatservice;

message Init        { string token   = 1; }
message ChannelMsg  { string channel = 1; string body = 2; }
message PrivateMsg  { string recipient = 1; string body = 2; }

message ServerEnvelope {
  oneof payload {
    string      notice       = 1;
    PrivateMsg  pm           = 2;
    ChannelMsg  cm           = 3;
    HistoryRes  history_res  = 4;
  }
}

message JoinChannel  { string name = 1; }
message LeaveChannel { string name = 1; }

message ClientEnvelope {
  oneof payload {
    Init         init  = 1;
    JoinChannel  join  = 2;
    LeaveChannel leave = 3;
    ChannelMsg   cm    = 4;
    PrivateMsg   pm    = 5;
  }
}

message Empty      {}
message HistoryReq { string channel = 1; int32 limit = 2; }
message HistoryRes { repeated ChannelMsg items = 1; }

service ChatService {
  // ── CLI / desktop ───────────────────────
  rpc Chat          (stream ClientEnvelope) returns (stream ServerEnvelope);

  // ── Browser (gRPC-Web) ──────────────────────────────
  rpc SubscribeChat (Init)        returns (stream ServerEnvelope);
  rpc SendChannelMsg(ChannelMsg)  returns (Empty);
  rpc SendPrivateMsg(PrivateMsg)  returns (Empty);
  rpc GetHistory    (HistoryReq)  returns (HistoryRes);
}
